function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 01-Jun-2018 00:14:52.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 9xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [1;1;1;1;1;1;1;1;1];
  x1_step1_gain = [0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222;0.222222222222222];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-2.313902152842461;0.93058619785603203;-1.2481496370900955;-0.84201188024875562;0.19662397973370352;0.38640928834336524;0.67460133122063337;-2.7440965807545217;1.2837637590431277;-2.8461343624075974];
  IW1_1 = [-1.5418915656650918 0.58635098748589431 -0.34375635722668696 -1.3143414039456462 -0.45729754464569516 -0.43374741167501252 -0.91664942447385878 -0.17373169449707826 -0.49314708734422286;-0.50660862924131211 -0.93933283017601765 -0.13175026166712256 -0.19789484014951045 -1.3541175913866581 -0.84379625772158273 -0.162051646391521 -0.84337057262698789 -0.22943010913134468;0.78670507979989324 -1.1140767961322928 0.11885604168070338 0.17126138636642979 -0.98601893791317929 -0.9864909099721092 1.1761494363469012 1.2232593555986273 -0.23955057891545295;0.35971320374162019 -0.22136417056214647 -1.1984096758102398 0.55917202112620301 -0.51908469703385984 0.2115212874465742 -0.93767280900821426 0.23250353866641449 0.051606602841183437;-0.34975579095916887 -0.0097271939360551729 -0.79787646264464307 0.58581545023347537 -0.60227801762509758 -0.061044446428682841 1.0250681984238095 -0.18614476384565781 -0.090090918916491305;0.063298432039804287 1.2092021130498758 2.0924916696497458 -0.88594474161331305 -0.49587207149182877 -0.18409949388605992 -0.58716097189872785 0.23061983041628056 0.021844916166545492;0.98816690969911147 -0.13788324176831812 0.54282729028561438 0.57397853386866426 -0.02377892711705535 -0.92174711274753796 1.0357595329087383 -0.14213799397227034 0.32823865475771652;-1.4298150078333625 -0.49899086572211959 -1.1424587129392763 -0.6488867929019978 0.69341962986525252 -1.1937822688955111 0.10353374823069202 -0.83850842555530036 -0.489109843928201;0.31284941963164625 -1.3614860457305999 -0.97914364362848771 -0.617106516283916 0.45969916851446307 -0.17187576290404982 0.16433002541193278 0.79802235930889309 -0.064068932666536973;-1.581267464414434 -0.35805655418661037 -1.3473316172358198 -1.7981063534227724 -0.098109161195208239 -0.0091831228739404913 -0.20917510825785773 -0.0026977537268237095 -0.19988246983896099];
  
  % Layer 2
  b2 = -0.14111513160693406;
  LW2_1 = [-0.59158641966936243 -0.05441143095749764 -0.16580944908356424 0.14111125799654681 0.12934855796471686 0.23190015185468124 0.17074036053446545 -1.1997515827315057 0.10786556806860481 0.93050394032989614];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 2;
  y1_step1_xoffset = 0;
  
  % ===== SIMULATION ========
  
  % Dimensions
  Q = size(x1,2); % samples
  
  % Input 1
  xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
  
  % Layer 1
  a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
  
  % Layer 2
  a2 = repmat(b2,1,Q) + LW2_1*a1;
  
  % Output 1
  y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
